# DSpace Docker image build for hub.docker.com
name: Docker

# Run this Build for all pushes / PRs to current branch
on: [push, pull_request]

jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      # Give Maven 1GB of memory to work with
      # Suppress all Maven "downloading" messages in logs (see https://stackoverflow.com/a/35653426)
      # This also slightly speeds builds, as there is less logging
      MAVEN_OPTS: "-Xmx1024M -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
      # Define tags to use for Docker images based on Git tags/branches
      # For a git branch commit, tag Docker image with that branch name
      # For a new git tag, tag Docker image with that same tag
      IMAGE_TAGS: |
        type=ref,event=branch
        type=ref,event=tag
    steps:
      # https://github.com/actions/checkout
      - name: Checkout codebase
        uses: actions/checkout@v2

      # https://github.com/actions/setup-java
      - name: Install JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      # https://github.com/docker/login-action
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # https://github.com/docker/metadata-action
      - name: Sync metadata (tags, labels) from GitHub to Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: tdonohue/dspace-testing
          tags: ${{ env.IMAGE_TAGS }}

      # https://github.com/docker/build-push-action
      - name: Build and push dspace
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          # For pull requests, we run the Docker build (to ensure no PR changes break the build),
          # but we ONLY do an image push to DockerHub if it's NOT a PR
          push: ${{ github.event_name != 'pull_request' }}
          # Use tags / labels provided by 'docker/metadata-action' above
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}